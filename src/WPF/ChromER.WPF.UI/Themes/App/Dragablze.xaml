<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
                    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChromER.WPF.UI">

    <Style TargetType="{x:Type Thumb}" x:Key="ChromerInvisibleThumbStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="SystemWindowButton">

        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">

                        <Viewbox Width="16"
                                 Height="16"
                                 Stretch="Uniform">
                            <ContentPresenter />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#1A1A1A" />
                        </Trigger>
                        <!--<Trigger Property="Window.IsActive"
                                 Value="False">
                            <Setter Property="Foreground" Value="#666666" />
                        </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!--<Condition Property="Window.IsActive"
                                           Value="False" />-->
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Foreground"
                                        Value="#b8b8b8" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SystemWindowButton}"
           x:Key="ChromerAddItemCommandButtonStyle">

        <Setter Property="ToolTip" Value="Новая вкладка" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Height="28"
                            Width="28"
                            CornerRadius="14"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">

                        <Viewbox Width="20"
                                 Height="20"
                                 Stretch="Uniform">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{TemplateBinding Foreground}"
                                      Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#292929" />
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            Value="False">
                            <Setter Property="Foreground" Value="#BFBFBF" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                    Value="False" />
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground"
                                        Value="#C9C9C9" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#333333" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="CloseItemButtonStyle">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="ToolTip" Value="Закрыть" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="8"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">

                        <Viewbox Width="8"
                                 Height="8">
                            <Path Stretch="Uniform"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="#555555" />
                        </Trigger>
                        <DataTrigger Value="False"
                                     Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}} }">
                            <Setter Property="Foreground" Value="#BFBFBF" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="False"
                                           Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}} }" />
                                <Condition Value="true"
                                           Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#414141" />
                                <Setter Property="Foreground" Value="#C4C4C4" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="False"
                                           Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}} }" />
                                <Condition Value="true"
                                           Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type dragablz:DragablzItem}}}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="White" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="#6D6D6D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChromerDragableTabItemStyle"
           TargetType="{x:Type dragablz:DragablzItem}">

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding>
                    <MultiBinding.Converter>
                        <local:CalcMaxWidthTabItemConverter />
                    </MultiBinding.Converter>
                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type dragablz:TabablzControl}}"
                             Path="ActualWidth" />
                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type dragablz:DragablzItemsControl}}"
                             Path="Items.Count" />

                </MultiBinding>
            </Setter.Value>
        </Setter>
     
        <Setter Property="Padding" Value="10,1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>


                        <Path Fill="{TemplateBinding Background}"
                              Stretch="Uniform"
                              VerticalAlignment="Bottom">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0 0"
                                                IsClosed="True">
                                        <ArcSegment Size="8 8"
                                                    Point="8 -8" />
                                        <LineSegment Point="8 0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <Border Grid.Column="1"
                                x:Name="Bd"
                                CornerRadius="8 8 0 0"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="contentPresenter"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                <Thumb Grid.Column="0"
                                       Style="{StaticResource ChromerInvisibleThumbStyle}"
                                       HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch"
                                       x:Name="PART_Thumb" />

                                <Button Grid.Column="1"
                                        BorderBrush="{TemplateBinding Background}"
                                        Style="{StaticResource CloseItemButtonStyle}"
                                        Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                            <Binding
                                                RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}"
                                                Path="ShowDefaultCloseButton" />
                                            <Binding
                                                RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}"
                                                Path="FixedHeaderCount" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="LogicalIndex" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                            </Grid>

                        </Border>

                        <Border Grid.Column="2"
                                x:Name="RightBorder"
                                BorderBrush="#4E4E4E"
                                Visibility="Visible"
                                Height="20"
                                Width="1"
                                BorderThickness="1"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />

                        <Path Grid.Column="2"
                              Stretch="Uniform"
                              Fill="{TemplateBinding Background}"
                              VerticalAlignment="Bottom">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0 -8"
                                                IsClosed="True">
                                        <ArcSegment Size="8 8"
                                                    Point="8 0" />
                                        <LineSegment Point="0 0" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RightBorder" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="#161616" />
                        </Trigger>
                        <DataTrigger Value="Normal"
                                     Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                            <Setter Property="Height" Value="34" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Selector.IsSelectionActive"
                                    Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="RightBorder" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background"
                                    Value="{DynamicResource ToolBarBackground }" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Selector.IsSelectionActive"
                                    Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RightBorder" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background"
                                    Value="{DynamicResource ToolBarBackground }" />
                        </MultiTrigger>
                        <DataTrigger Value="False"
                                     Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}} }">
                            <Setter Property="Foreground" Value="#BFBFBF" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="False"
                                           Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}} }" />
                                <Condition Value="true"
                                           Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="White" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="False"
                                           Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}} }" />
                                <Condition Value="true"
                                           Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" Value="#C4C4C4" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dragablz:TabablzControl}"
           x:Key="TabablzControlStyle">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 8 0 0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="SelectedItem" Value="{Binding CurrentTabItem, Mode=TwoWay}" />
        <Setter Property="NewItemFactory" Value="{Binding Factory}" />
        <Setter Property="ItemsSource" Value="{Binding TabItems}" />
        <Setter Property="ClosingItemCallback"
                Value="{x:Static local:CloseActionStorage.ClosingTabItemHandler}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChromerDragableTabItemStyle}" />
        <Setter Property="ShowDefaultAddButton" Value="True" />
        <Setter Property="ShowDefaultCloseButton" Value="True" />
        <Setter Property="AdjacentHeaderItemOffset" Value="-16" />
        <Setter Property="HeaderMemberPath" Value="Header" />
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:TabablzControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="contentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                Margin="0 0 0 0">
                            <Grid x:Name="PART_ItemsHolder" />
                        </Border>
                        <Grid Grid.Column="0" Grid.Row="0"
                              Margin="0,2,2,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Bottom"
                              x:Name="HeaderContainerGrid"
                              Visibility="{TemplateBinding IsHeaderPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.Resources>
                                <Style TargetType="{x:Type Button}"
                                       BasedOn="{StaticResource StandardEmbeddedButtonStyle}" />
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" x:Name="PrefixContentControl"
                                            Content="{TemplateBinding HeaderPrefixContent}"
                                            ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}" />
                            <dragablz:DragablzItemsControl x:Name="PART_HeaderItemsControl"
                                                           Grid.Column="1"
                                                           ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"
                                                           ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                           ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                                           KeyboardNavigation.TabIndex="1"
                                                           Panel.ZIndex="1"
                                                           ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                                           FixedItemCount="{TemplateBinding FixedHeaderCount}"
                                                           Style="{StaticResource TabablzDragablzItemsControlStyle}">
                                <dragablz:DragablzItemsControl.MaxWidth>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <dragablz:TabablzHeaderSizeConverter Orientation="Horizontal" />
                                        </MultiBinding.Converter>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ItemsPresenterWidth" />
                                        <Binding ElementName="PrefixContentControl" Path="ActualWidth" />
                                        <Binding ElementName="DefaultAddButton" Path="DesiredSize.Width" />
                                        <Binding ElementName="SuffixContentControl" Path="DesiredSize.Width" />
                                    </MultiBinding>
                                </dragablz:DragablzItemsControl.MaxWidth>
                            </dragablz:DragablzItemsControl>
                            <Button Style="{StaticResource ChromerAddItemCommandButtonStyle}"
                                    x:Name="DefaultAddButton"
                                    Grid.Column="2"
                                    Command="{x:Static dragablz:TabablzControl.AddItemCommand}"
                                    Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <ContentControl Grid.Column="3" x:Name="SuffixContentControl"
                                            Content="{TemplateBinding HeaderSuffixContent}"
                                            ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}"
                                            HorizontalAlignment="Stretch" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHeaderPanelVisible" Value="False">
                            <Setter Property="Margin" TargetName="contentPanel" Value="0 0 0 0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="PART_HeaderItemsControl" Value="1" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="PART_HeaderItemsControl" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="PART_HeaderItemsControl" Value="0" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_HeaderItemsControl" Value="0" />
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="PART_HeaderItemsControl" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="PART_HeaderItemsControl" Value="0" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_HeaderItemsControl" Value="1" />
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="PART_HeaderItemsControl" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsDraggingWindow" Value="True">
                            <Setter TargetName="DefaultAddButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="HeaderItemsOrganiser">
                    <Setter.Value>
                        <dragablz:VerticalOrganiser />
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource StandardDragablzTabItemVerticalStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dragablz:TabablzControl}">
                            <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true"
                                  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" Width="Auto" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Grid.Column="1"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local"
                                        Margin="-1 0 0 0">
                                    <Grid x:Name="PART_ItemsHolder" />
                                </Border>
                                <Grid Grid.Column="0" x:Name="HeaderContainerGrid"
                                      Visibility="{TemplateBinding IsHeaderPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ContentControl Grid.Row="0" x:Name="PrefixContentControl"
                                                    Content="{TemplateBinding HeaderPrefixContent}"
                                                    ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                                    ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}" />
                                    <dragablz:DragablzItemsControl x:Name="PART_HeaderItemsControl"
                                                                   Grid.Row="1"
                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"
                                                                   ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                                   ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                                                   KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"
                                                                   ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                                                   Style="{StaticResource TabablzDragablzItemsControlStyle}">
                                        <dragablz:DragablzItemsControl.MaxHeight>
                                            <MultiBinding>
                                                <MultiBinding.Converter>
                                                    <dragablz:TabablzHeaderSizeConverter Orientation="Vertical" />
                                                </MultiBinding.Converter>
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                         Path="ActualHeight" />
                                                <Binding RelativeSource="{RelativeSource Self}"
                                                         Path="ItemsPresenterHeight" />
                                                <Binding ElementName="PrefixContentControl" Path="ActualHeight" />
                                                <Binding ElementName="DefaultAddButton" Path="DesiredSize.Height" />
                                                <Binding ElementName="SuffixContentControl" Path="DesiredSize.Height" />
                                            </MultiBinding>
                                        </dragablz:DragablzItemsControl.MaxHeight>
                                    </dragablz:DragablzItemsControl>
                                    <Button Style="{StaticResource ChromerAddItemCommandButtonStyle}"
                                            x:Name="DefaultAddButton"
                                            Grid.Row="2"
                                            Command="{x:Static dragablz:TabablzControl.AddItemCommand}"
                                            Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <ContentControl Grid.Row="3" x:Name="SuffixContentControl"
                                                    Content="{TemplateBinding HeaderSuffixContent}"
                                                    ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
                                                    ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}"
                                                    VerticalAlignment="Top" />
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Value="Maximized"
                         Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type dockablz:Branch}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dockablz:Branch}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="30"
                                                  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FirstItemLength, Mode=TwoWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition MinWidth="30"
                                                  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SecondItemLength, Mode=TwoWay}" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_FirstContentPresenter" Content="{TemplateBinding FirstItem}" />
                            <GridSplitter Grid.Column="1" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"
                                          Width="5"
                                          Background="#202124" />
                            <ContentPresenter x:Name="PART_SecondContentPresenter" Grid.Column="2"
                                              Content="{TemplateBinding SecondItem}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dockablz:Branch}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MinHeight="30"
                                                       Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FirstItemLength, Mode=TwoWay}" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition MinHeight="30"
                                                       Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SecondItemLength, Mode=TwoWay}" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter x:Name="PART_FirstContentPresenter"
                                                      Content="{TemplateBinding FirstItem}" />
                                    <GridSplitter Grid.Row="1" ResizeDirection="Rows"
                                                  ResizeBehavior="PreviousAndNext"
                                                  Background="#202124"
                                                  Height="5"
                                                  HorizontalAlignment="Stretch" />
                                    <ContentPresenter x:Name="PART_SecondContentPresenter" Grid.Row="2"
                                                      Content="{TemplateBinding SecondItem}" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>